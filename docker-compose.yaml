version: '3'

services:
  nginx:
    build:
      context: .
      dockerfile: deploy/nginx/Dockerfile
    ports:
      - 80:80
    restart: always
    depends_on:
      - app
    volumes:
      - static:/app/static

  app: &app
    build:
      dockerfile: deploy/python/Dockerfile
      context: .
    restart: always
    ports:
      - 8000:8000
    depends_on:
      - postgres
      - redis
    environment:
      DB_HOST: postgres
      DEBUG: 'True'
      REDIS_CONNECTION: redis://redis:6379
      PYTHONBUFFERED: 1
    volumes:
      - static:/app/static

  celery:
    <<: *app
    working_dir: /app/src
    command: celery -A service_monitoring worker -l debug
    ports: [ ]
    volumes: [ ]



  celery-beat:
    <<: *app
    working_dir: /app/src
    depends_on:
      - celery
    command: celery -A service_monitoring beat -l debug
    ports: [ ]
    volumes: [ ]

  postgres:
    image: postgres:13.4-alpine
    environment:
      POSTGRES_DB: service_monitoring
      POSTGRES_USER: service_monitoring
      POSTGRES_PASSWORD: service_monitoring
    volumes:
      - db:/var/lib/postgresql/data

  redis:
    image: redis:6-alpine
    ports:
      - 6379:6379

volumes:
  db:
  static: